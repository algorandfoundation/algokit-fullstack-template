{% if _copier_conf.os in ['linux', 'macos'] %}
#!/bin/bash
# Script to check minimum AlgoKit version

{% raw %}
min_version="2.0.0"
current_version=$(algokit --version | grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+" | head -1 || echo "0.0.0")

is_smaller() {
  local IFS=.
  local i ver1=($1) ver2=($2)
  for ((i=0; i<${#ver1[@]} || i<${#ver2[@]}; i++)); do
    local v1=${ver1[i]:-0} v2=${ver2[i]:-0}
    if ((v1 < v2)); then
      return 0
    elif ((v1 > v2)); then
      return 1
    fi
  done
  return 1
}

if is_smaller "$current_version" "$min_version"; then
  echo "⚠️  Warning: Incompatible algokit version ($current_version), please update to at least $min_version. See https://github.com/algorandfoundation/algokit-cli/releases/latest"
  exit 1
fi
echo "AlgoKit version $current_version is compatible."
# self destruct the file
rm -f "$0"
{% endraw %}
{% else %}
# Script to check minimum AlgoKit version

{% raw %}
$min_version = "2.0.0"
$current_version = (algokit --version | Select-String -Pattern "\d+\.\d+\.\d+" | ForEach-Object { $_.Matches } | Select-Object -First 1).Value
if (-not $current_version) {
  $current_version = "0.0.0"
}

function Compare-Versions($v1, $v2) {
  $v1_parts = $v1.Split(".")
  $v2_parts = $v2.Split(".")

  for ($i = 0; $i -lt [Math]::Max($v1_parts.Length, $v2_parts.Length); $i++) {
    $v1_part = if ($i -lt $v1_parts.Length) { [int]$v1_parts[$i] } else { 0 }
    $v2_part = if ($i -lt $v2_parts.Length) { [int]$v2_parts[$i] } else { 0 }

    if ($v1_part -lt $v2_part) {
      return -1
    }
    elseif ($v1_part -gt $v2_part) {
      return 1
    }
  }
  return 0
}

if ((Compare-Versions $current_version $min_version) -lt 0) {
  Write-Host "⚠️  Warning: Incompatible algokit version ($current_version), please update to at least $min_version. See https://github.com/algorandfoundation/algokit-cli/releases/latest"
  exit 1
}
Write-Host "AlgoKit version $current_version is compatible."
# self destruct the file
Remove-Item $MyInvocation.MyCommand.Path
{% endraw %}
{% endif %}
