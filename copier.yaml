_subdirectory: ./template_content

_tasks:
    - "echo '==== 1/4 - Initializing frontend template ===='"
    - "algokit init -t react -n frontend --no-git --no-ide --no-bootstrap
        -a author_email {{ author_email }}
        -a author_name {{ author_name }}
        -a ide_vscode {{ ide_vscode }}
        -a use_github_actions false"

    - "echo '==== 2/4 - Initializing backend template ===='"
    - "algokit init -t beaker_production -n backend --no-git --no-ide --no-bootstrap
        -a author_email {{ author_email }}
        -a author_name {{ author_name }}
        -a ide_vscode {{ ide_vscode }}
        -a use_github_actions false
        -a deployment_language typescript
        -a python_linter {{ python_linter }}
        -a use_python_black {{ use_python_black }}
        -a use_python_mypy {{ use_python_mypy }}
        -a use_python_pytest {{ use_python_pytest }}
        -a use_python_pip_audit {{ use_python_pip_audit }}"

    - "echo '==== 3/4 - Bootstrapping smart contracts folder ===='"
    - "cd backend/smart_contracts && algokit bootstrap all"

    - "echo '==== 4/4 - Integrating fullstack components into frontend template ===='"
    - "{{ _copier_python }} inject.py"

# questions
# project_name should never get prompted, AlgoKit should always pass it by convention
project_name:
    type: str
    help: Name for this project.
    placeholder: "algorand-app"
    default: "algorand-app"

author_name:
    type: str
    help: Package author name
    placeholder: "Your Name"
    default: "Your-Name"

author_email:
    type: str
    help: Package author email
    placeholder: "your@email.tld"
    default: "your@email.tld"

python_linter:
    type: str
    help: Do you want to use a Python linter on smart contracts codebase?
    choices:
        Ruff: "ruff"
        Flake8: "flake8"
        No thanks: "none"
    default: "ruff"

use_python_black:
    type: bool
    help: Do you want to use a Python formatter (via Black) on smart contracts codebase?
    default: yes

use_python_mypy:
    type: bool
    help: Do you want to use a Python type checker (via mypy) on smart contracts codebase?
    default: yes

use_python_pytest:
    type: bool
    help: Do you want to include unit tests for smart contracts (via pytest)?
    default: yes

use_python_pip_audit:
    type: bool
    help: Do you want to include Python dependency vulnerability scanning for smart contracts (via pip-audit)?
    default: yes

ide_vscode:
    type: bool
    help: Do you want to add VSCode configuration?
    default: yes

use_github_actions:
    type: bool
    help: Do you want to include Github Actions workflows for build and testnet deployment?
    default: yes

cloud_provider:
    type: str
    help: Pick your website hosting provider for continuous delivery
    when: "{{ use_github_actions != false }}"
    choices:
        Netlify: "netlify"
        Vercel: "vercel"
        Skip CD setup: "none"
    default: "netlify"
