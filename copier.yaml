_subdirectory: ./template_content

_tasks:
  - "echo '==== 1/4 - Initializing base template ===='"
  - 'algokit init -t base -n . --no-git --no-ide --no-bootstrap --no-workspace
    -a include_readme "no"
    -a include_algokit_toml "no"
    -a include_vscode_code_workspace "no"
    -a include_github_workflow_template "no"'

  - "echo '==== 2/4 - Initializing frontend template ===='"
  - 'algokit init -t react -n {{ project_name }}-frontend --no-git --no-ide --no-bootstrap
    -a author_email "{{ author_email }}"
    -a author_name "{{ author_name }}"
    -a preset_name "{{ preset_name }}"
    -a ide_vscode "{{ ide_vscode }}"
    -a ide_jetbrains "{{ ide_jetbrains }}"
    -a cloud_provider "{{ cloud_provider }}"
    -a use_github_actions "{{ use_github_actions }}"'

  - "echo '==== 3/4 - Initializing contract template ===='"
  - 'algokit init -t {{ contract_template }} -n {{ project_name }}-contracts --no-git --no-ide --no-bootstrap
    -a author_email "{{ author_email }}"
    -a author_name "{{ author_name }}"
    -a preset_name "{{ preset_name }}"
    -a contract_name "{{ contract_name }}"
    -a deployment_language "{{ deployment_language }}"
    -a ide_vscode "{{ ide_vscode }}"
    -a ide_jetbrains "{{ ide_jetbrains }}"
    -a use_github_actions "{{ use_github_actions }}"
    -a use_pre_commit "no"'

  - "echo '==== 4/4 - Finalizing setup ===='"
  # Execute OS-specific file copying script (with self-destruction)
  - command: chmod +x ./copy_files.sh
    when: "{{ _copier_conf.os in ['linux', 'macos'] }}"
  - command: ./copy_files.sh "{{ project_name }}"
    when: "{{ _copier_conf.os in ['linux', 'macos'] }}"
  - command: |
      powershell -File ./copy_files.ps1 -project_name "{{ project_name }}"
    when: "{{ _copier_conf.os == 'windows' }}"

contract_template:
  type: str
  help: Choose the contract template.
  when: false
  choices:
    Python: python
    TypeScript: typescript
    TealScript: tealscript
  default: python

project_name:
  type: str
  help: Name for this project.
  placeholder: 'algorand-frontend'
  default: 'myproject'

preset_name:
  type: str
  help: Name of the template preset to use.
  choices:
    'Starter - for a simpler starting point ideal for prototyping': 'starter'
    'Production - for confidently deploying to MainNet and/or more complex projects': 'production'
    'Custom - for tailoring the template output to your needs': 'custom'
  default: 'starter'

contract_name:
  type: str
  help: Name of the default smart contract app.
  placeholder: '{{ "HelloWorld" if contract_template == "tealscript" else "hello_world" }}'
  default: '{{ "HelloWorld" if contract_template == "tealscript" else "hello_world" }}'
  validator: >-
    {% if contract_template == 'tealscript' %}
      {% if not (contract_name | regex_search('^[A-Z][a-zA-Z]*(?:[A-Z][a-zA-Z]*)*$')) %}
        contract_name must be formatted in PascalCase.
      {% endif %}
    {% else %}
      {% if not (contract_name | regex_search('^[a-z]+(?:_[a-z]+)*$')) %}
        contract_name must be formatted in snake case.
      {% endif %}
    {% endif %}

author_name:
  type: str
  help: Package author name
  placeholder: 'Your-Name'
  default: 'Your-Name'

author_email:
  type: str
  help: Package author email
  placeholder: 'your@email.tld'
  default: 'your@email.tld'

deployment_language:
  type: str
  help: Pick language for deployment scripts in the backend?
  when: "{{ contract_template == 'python' }}"
  choices:
    Python: 'python'
    TypeScript: 'typescript'
  default: 'python'

ide_vscode:
  type: bool
  help: Do you want to add VSCode configuration?
  when: "{{ preset_name == 'custom' }}"
  default: yes

ide_jetbrains:
  type: bool
  help: Do you want to add JetBrains configuration (`frontend` optimized for WebStorm, `backend` for PyCharm CE)?
  when: "{{ preset_name == 'custom' }}"
  default: no

use_github_actions:
  type: bool
  help: Do you want to include Github Actions workflows for build and testnet deployment?
  when: "{{ preset_name == 'custom' }}"
  default: "{{ 'yes' if preset_name == 'production' else 'no' }}"

cloud_provider:
  type: str
  help: Pick your website hosting provider for continuous delivery
  when: '{{ use_github_actions != false }}'
  choices:
    Netlify: 'netlify'
    Vercel: 'vercel'
    Skip CD setup: 'none'
  default: "{{ 'netlify' if preset_name == 'production' else 'none' }}"
